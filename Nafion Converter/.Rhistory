matchH2O
counts$counts_ave <- counts$counts_ave / (-0.0093 * H2O$AH[matchH2O] + 1)
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
filename = 'C:/Users/zacpayne/Desktop/Test with Evan.csv'
filename = 'C:/Users/zacpayne/Desktop/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
filename = 'F:/Surface 3/Main Folder/Documents/Lab Data/2020_09 IURTP/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
View(noxfile)
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
counts
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
matchH2O <- match(counts$datetime, H2O$datetime)
counts$counts_ave <- counts$counts_ave / (-0.0093 * H2O$AH[matchH2O] + 1)
head(counts)
matchH2O <- match(counts$datetime, H2O$datetime)
H2O$AH[matchH2O]
H2O$AH[matchH2O]
H2O$AH[matchH2O]
H2O$AH[matchH2O]
H2O$AH[matchH2O]
head(H2O)
head(noxfile)
head(counts)
matchH2O <- match(counts$datetime, H2O$datetime)
head(matchH2O)
matchH2O
counts$datetime
H2O$datetime
licor <- read.table(file, sep = " ", header = TRUE, skip = 1)
licor$datetime <- paste(licor$Date.Y.M.D., licor$Time.H.M.S.)
licor <- subset(licor, select=c(datetime, H2O.ppt.))
licor$datetime <- as.POSIXct(licor$datetime, tz = 'UTC')
## Average Licor data per minute ##
licor$datetime <- floor_date(licor$datetime, unit = "1 minute")
H2O <- ddply(licor, .(datetime), summarise, mean(H2O.ppt.), sd(H2O.ppt.))
## Convert to AH ##
H2O$`mean(H2O.ppt.)` <- H2O$`mean(H2O.ppt.)`/ 1000 * 18 / 0.0224
H2O$`sd(H2O.ppt.)` <- H2O$`sd(H2O.ppt.)`/ 1000 * 18 / 0.0224
colnames(H2O) <- c('datetime', 'AH', 'AH_sd')
head(H2O)
matchH2O <- match(counts$datetime, H2O$datetime)
matchH2O
counts$counts_ave <- counts$counts_ave / (-0.0093 * H2O$AH[matchH2O] + 1)
## Seperate by counts
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
## Find the counts related to differences within the system
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
## Counts output
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
## Write counts file
#filename <- 'C:/Users/zacpayne/Desktop/counts.csv'
#write.csv(counts_output, filename, row.names = FALSE)
## Find Concentration
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
#### Concentration Data.frame ####
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
#### Export #####
filename = 'F:/Surface 3/Main Folder/Documents/Lab Data/2020_09 IURTP/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
head(concentration)
head(counts)
matchH2O <- match(counts$datetime, H2O$datetime)
matchH2O
H2O$AH[matchH2O]
counts$counts_ave / (-0.0093 * H2O$AH[matchH2O] + 1)
counts$counts_ave
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
counts$counts_ave <- counts$counts_ave / (-0.0093 * H2O$AH[matchH2O] + 1)
counts$counts_ave
c(1,2,3,4,5,6)
c <- c(1,2,3,4,5,6)
c[seq(1, 6, 2)] <- c[seq(1,6, 2)] + 1
c
H2O$AH[matchH2O[seq(1, nrow(counts), 5)]]
H2O$AH[matchH2O]
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
matchH2O <- match(counts$datetime, H2O$datetime)
counts$counts_ave[seq(1, nrow(counts), 5)] <- counts$counts_ave[seq(1, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(1, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(2, nrow(counts), 5)] <- counts$counts_ave[seq(2, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(2, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(4, nrow(counts), 5)] <- counts$counts_ave[seq(4, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(4, nrow(counts), 5)]] + 1)
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
head(concentration)
plot(hono_ppb, datetime, type = 'l')
plot(hono_ppb ~ datetime, concentration, type = 'l')
input_no_cal1 <- 278 #Through blank cell
input_no_cal2 <- 283 #Through Nafion
input_no_cal1_int <- 0
input_no_cal2_int <- 0
input_hono_ce_naf <- 0.52
input_hono_ce_lamp <- 0.043
input_no2_ce_lamp <- 0.935
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
## Counts output
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
## Write counts file
#filename <- 'C:/Users/zacpayne/Desktop/counts.csv'
#write.csv(counts_output, filename, row.names = FALSE)
## Find Concentration
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
#### Concentration Data.frame ####
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
plot(hono_ppb ~ datetime, concentration, type = 'l')
plot(hono_ppb ~ datetime, concentration, type = 'l')
plot(no_ppb ~ datetime, concentration, type = 'l')
no_ppb
concentration$no_ppb
concentration$no2_ppb
plot(no2_ppb ~ datetime, concentration, type = 'l')
plot(H2O$datetime, H2O$AH, type = 'l')
no
hono
head(noxfile)
plot(noxfile$TheTime[1:3600], noxfile$CH1_Hz, type = 'l')
plot(noxfile$TheTime[1:3600], noxfile$CH1_Hz[1:3600], type = 'l')
no
bkgd1counts
bkgd2counts
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
bkgd1counts
bkgd2counts
filename = 'F:/Surface 3/Main Folder/Documents/Lab Data/2020_09 IURTP/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
write.csv(concentration, filename, row.names = FALSE)
nrow(noxfile)
plot(noxfile$TheTime[60000:63600], noxfile$CH1_Hz[60000:63600], type = 'l')
plot(noxfile$TheTime[50000:53600], noxfile$CH1_Hz[50000:53600], type = 'l')
plot(noxfile$TheTime[40000:43600], noxfile$CH1_Hz[40000:43600], type = 'l')
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
blgd1counts
blgd1counts
nocounts
no2
nrow(counts)
nrow(trimsignal)
nrow(noxfile)
head(noxfile)
head(noxfile, 300)
plot(head(noxfile$TheTime, 300), head(noxfile$CH1_Hz, 300), type = 'l')
no2
no
no2counts
nocounts
no2 <- no2counts - nocounts
no2
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
matchH2O <- match(counts$datetime, H2O$datetime)
counts$counts_ave[seq(1, nrow(counts), 5)] <- counts$counts_ave[seq(1, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(1, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(2, nrow(counts), 5)] <- counts$counts_ave[seq(2, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(2, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(4, nrow(counts), 5)] <- counts$counts_ave[seq(4, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(4, nrow(counts), 5)]] + 1)
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
nocounts
no2counts
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
## H2o Correction ##
matchH2O <- match(counts$datetime, H2O$datetime)
counts$counts_ave[seq(2, nrow(counts), 5)] <- counts$counts_ave[seq(1, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(1, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(3, nrow(counts), 5)] <- counts$counts_ave[seq(2, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(2, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(5, nrow(counts), 5)] <- counts$counts_ave[seq(4, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(4, nrow(counts), 5)]] + 1)
## Seperate by counts
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
## Find the counts related to differences within the system
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
no2
no
no
no2
no
no2
hono
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
## Write counts file
#filename <- 'C:/Users/zacpayne/Desktop/counts.csv'
#write.csv(counts_output, filename, row.names = FALSE)
## Find Concentration
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
#### Concentration Data.frame ####
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
concentration
filename = 'F:/Surface 3/Main Folder/Documents/Lab Data/2020_09 IURTP/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
filename = 'F:/Surface 3/Main Folder/Documents/Lab Data/2020_09 IURTP/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
plot(head(noxfile$TheTime, 1200), head(noxfile$CH1_Hz, 1200), type = 'l')
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
bkgd1counts
nocounts
time
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
bkgd1counts
nocounts
counts$counts_ave[seq(1, nrow(counts), 5)]
matchH2O <- match(counts$datetime, H2O$datetime)
counts$counts_ave[seq(2, nrow(counts), 5)] <- counts$counts_ave[seq(2, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(2, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(3, nrow(counts), 5)] <- counts$counts_ave[seq(3, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(3, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(5, nrow(counts), 5)] <- counts$counts_ave[seq(5, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(5, nrow(counts), 5)]] + 1)
## Seperate by counts
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
## Find the counts related to differences within the system
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
## Counts output
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
## Write counts file
#filename <- 'C:/Users/zacpayne/Desktop/counts.csv'
#write.csv(counts_output, filename, row.names = FALSE)
## Find Concentration
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
#### Concentration Data.frame ####
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
counts <- ddply(trimsignal, .(TheTime), summarise, mean(CH1_Hz), sd(CH1_Hz))
colnames(counts) <- c('datetime', 'counts_ave', 'counts_sd')
counts$counts_ave[seq(2, nrow(counts), 5)]
counts$counts_ave[seq(2, nrow(counts), 5)] <- counts$counts_ave[seq(2, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(2, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(2, nrow(counts), 5)]
counts$counts_ave[seq(3, nrow(counts), 5)] <- counts$counts_ave[seq(3, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(3, nrow(counts), 5)]] + 1)
counts$counts_ave[seq(5, nrow(counts), 5)] <- counts$counts_ave[seq(5, nrow(counts), 5)] / (-0.0093 * H2O$AH[matchH2O[seq(5, nrow(counts), 5)]] + 1)
bkgd1counts <- counts$counts_ave[seq(1, nrow(counts), 5)]
nocounts <- counts$counts_ave[seq(2, nrow(counts), 5)]
no2counts <- counts$counts_ave[seq(3, nrow(counts), 5)]
bkgd2counts <- counts$counts_ave[seq(4, nrow(counts), 5)]
honocounts <- counts$counts_ave[seq(5, nrow(counts), 5)]
bkgd1counts_sd <- counts$counts_sd[seq(1, nrow(counts), 5)]
nocounts_sd <- counts$counts_sd[seq(2, nrow(counts), 5)]
no2counts_sd <- counts$counts_sd[seq(3, nrow(counts), 5)]
bkgd2counts_sd <- counts$counts_sd[seq(4, nrow(counts), 5)]
honocounts_sd <- counts$counts_sd[seq(5, nrow(counts), 5)]
time <-  counts$datetime[seq(1, nrow(counts), 5)]
no <- nocounts - bkgd1counts
no_sd <- sqrt(nocounts_sd^2 + bkgd1counts_sd^2)
hono <- honocounts - bkgd2counts #This is technically NO + HONO counts
hono_sd <- sqrt(honocounts_sd^2 + bkgd2counts_sd^2)
no2 <- no2counts - nocounts
no2_sd <- sqrt(no2counts_sd^2 + nocounts_sd^2)
no
counts_output <- data.frame(time, no, no_sd, hono, hono_sd, no2, no2_sd)
colnames <- c('datetime', 'no_counts', 'no_counts_sd', 'hono_counts', 'hono_counts_sd', 'no2_counts', 'no2_counts_sd')
## Write counts file
#filename <- 'C:/Users/zacpayne/Desktop/counts.csv'
#write.csv(counts_output, filename, row.names = FALSE)
## Find Concentration
NOconc <- (no - input_no_cal1_int)*(input_no_cal1)^-1
NOconc[NOconc < 0] = 0
NOconc_sd <- (no_sd)*(input_no_cal1)^-1
NOcounts2 <- (NOconc)*(input_no_cal2) + input_no_cal2_int ## Counts of NO for the nafion converter
HONOconc <- (hono - NOcounts2)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1 ## Concentration of HONO determined by Naf
HONOconc[HONOconc < 0] = 0
honoconc_sd <- (hono_sd)*(input_no_cal2)^-1*(input_hono_ce_naf)^-1
HONOcounts1 <- HONOconc*input_no_cal1*input_hono_ce_lamp ##Counts of HONO from the photolysis cell
no2conc <- (no2-HONOcounts1)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1 ## Concentration of NO2 by photolysis
no2conc[no2conc < 0] = 0
no2conc_sd <- (no2_sd)*(input_no_cal1)^-1*(input_no2_ce_lamp)^-1
#### Concentration Data.frame ####
concentration <- data.frame(
datetime = time,
no_ppb = NOconc,
no_ppb_sd = NOconc_sd,
no2_ppb = no2conc,
no2_ppb_sd = no2conc_sd,
hono_ppb = HONOconc,
hono_ppb_sd = honoconc_sd
)
filename = 'F:/Surface 3/Main Folder/Documents/Lab Data/2020_09 IURTP/Test for IURTP.csv'
write.csv(concentration, filename, row.names = FALSE)
